[{"content":" LINK 👉 LECTURE - Clink here! 👈\n 데이터 사이언스 소개 및 빅데이터 특성 [ 데이터 사이언스 ]\n데이터로부터 인사이트를 뽑는 과정\n데이터로부터 인사이트를 얻기 위한 과학적인 방법, 알고리즘, 시스템에 대한 것\n많은 데이터(Data) + 그 데이터를 분석하는 다양한 알고리즘 (Algorithm)\n-\u0026gt; 데이터와 알고리즘을 입력으로 해서 분석하는 툴 (Tool-빅데이터, 머신러닝)\n-\u0026gt; 인사이트\n 데이터 사이언스 응용 1. Business Report\n예시\n(1) 올해 고객들이 산 상품 중 최대로 많이 팔린 상품 10가지 분석\n(2) 사용자들이 어떤 프로모션에 잘 반응해서 세일즈가 올라가는지 분석\n-\n2. Temporal Analysis (시차에 따른 분석)\n예시\n(1) SNS에서 좋아요가 얼마나 많이 공유되는지 시간대별 분석\n(2) 길에서 해당 시간마다 얼마만큼의 자동차가 이동하는지 분석\n(3) 공장에서의 많은 데이터 중 특정 데이터에서 기계에 문제가 있는지 검출\n-\n3. Recommendation (추천 시스템)\n예시\n(1) 넷플릭스의 영화 추천\n(2) 아마존 등의 회사에서 사용자가 구매할 물건 추천\n(3) 뉴스 사이트, 정보 사이트에서 콘텐츠 선호도를 통해 개인화된 정보 추천\n-\n4. Sentiment Analysis\n전통적인 추천뿐만 아니라 사용자가 어떤 감정을 가지고 있는지, 어떤 생각을 가지고 있는지를 분석하는 방법\n예시\n(1) 글이 긍정적인지, 부정적인지, 중립적인 글인지 분석\n(2) 사용자가 슬픈 상태인지, 화난 상태인지 등 감정 분석\n-\n5. Graph Analysis (그래프 분석)\n그래프는 여러 개의 vertex와 그 vertex가 연결된 edge로 구성\n예시\n(1) 웹 그래프\n​\t웹에서 웹페이지는 vertex, 웹페이지에서 웹페이지로 연결될 때의 링크들은 edge\n​\t어떤 웹페이지가 더 중요하고 사람들이 좋게 생각하는 지 분석\n(2) SNS에서 친구관계를 그래프로 표현해 새로운 친구 추천\n-\n6. Image / Audio / Video Anlaysis\n텍스트 데이터가 아닌 이미지, 오디오, 비디오 데이터 분석\n예시\n(1) 사진들에서 관련된 객체들을 뽑아내 전부 표현\n(2) 사진이 어떤 카테고리에 해당하는지 분석\n(3) 음악의 내용을 인식해 해당 음악의 정보 자동 서치\n(4) 비디오의 해당 내용을 자동으로 분석해 요약 정보 제공\n 빅데이터 특성 - 3Vs 1. Volume - 데이터의 양\n2014 -2016까지 만들어내는 데이터의 양은 1 zettabyte\n1 zettabyte = 10^21\n그만큼 정말 많은 데이터가 발생하고있다.\n-\n2. Variety - 데이터의 종류\n빅데이터 이전의 시대에는 데이터 자체의 구조가 잘 갖추어진 structured data\n현재는 앞서 말한 것 뿐만 아니라 자유 형태의 텍스트, 이미지, 오디오, 비디오 등 다양한 형태를 다 다룬다.\n예시\nWebsite traffic : 사용자들이 접속했을 때의 로그 정보 (텍스트 형태)\nPurchase trasactions : 물건을 구입하는 등의 정보 (structured data 형태)\nFaceboook friends : 페이스북의 친구 관계\nYoutube video : 유튜브 같은 사이트 등에서 비디오 형태의 데이터 사용\n-\n3. Velocity - 데이터가 빠르게 발생함\n예시\n매 60초마다 페이스북에 51만 건의 코멘트가 올라간다.\n그만큼 빠르게 데이터가 생성된다.\n ","date":"2021-04-30T00:00:00Z","image":"https://quipu1.github.io/p/%EB%B9%85%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%99%80-%EB%A8%B8%EC%8B%A0%EB%9F%AC%EB%8B%9D-%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-1-1/algo_hu12055b8e2f61063ac79e64205f0ee830_18600_120x120_fill_box_smart1_2.png","permalink":"https://quipu1.github.io/p/%EB%B9%85%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%99%80-%EB%A8%B8%EC%8B%A0%EB%9F%AC%EB%8B%9D-%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-1-1/","title":"빅데이터와 머신러닝 소프트웨어 1-1"},{"content":"LINK 👉 PROBLEM - Clink here! 👈\n[ ROUTE ] SWEA -\u0026gt; Learn -\u0026gt; Course -\u0026gt; 파이썬 SW문제해결 기본 Queue -\u0026gt; 5차시\n 문제 요약 주어진 횟수만큼 동작했을 때, 수열의 맨 앞에 있는 수는 무엇인가?\n동작 : 수열의 맨 앞의 수를 맨 뒤로 보낸다.\n 문제 풀이 📌 Input\n3\r3 10\r5527 731 31274\r5 12\r18140 14618 18641 22536 23097\r10 23\r17236 31594 29094 2412 4316 5044 28515 24737 11578 7907\r📌 Solving\n# T = 테스트 케이스 수 T = int(input()) for tc in range(1, T+1): # N = 숫자의 개수 # M = 뒤로 보내는 작업 횟수 N, M = map(int, input().split()) # array = 주어진 수열 array = list(map(int, input().split())) # 현재까지 뒤로 보내는 작업을 한 횟수 cnt = 0 # 작업을 M번 할 때까지 반복 while cnt != M: # array.pop(0)을 통해서 배열의 맨 앞의 원소를 빼내고 값을 가져온다. # pop은 값을 리스트에서 삭제할뿐만 아니라 해당 값을 return한다. # 가져온 값을 다시 배열의 맨 뒤로 append 해준다. array.append(array.pop(0)) # 24번 줄에서 작업을 한 번 해줬기 때문에 현재 작업수를 1회 더해준다. cnt += 1 # 출력으로 현재 배열의 맨 앞의 수를 꺼낸다. print(\u0026#34;#{} {}\u0026#34;.format(tc, array[0])) 📌 Output\n#1 731\r#2 18641\r#3 2412\r 내 생각 python에서 제공하는 리스트 메서드인 pop()로 간단하게 풀 수 있었다.\n위의 풀이 외에도 규칙을 찾아 다른 풀이를 쓸 수 있다.\n예를 들면 횟수 : 10 / 배열 : [ 1, 2, 3 ]이 주어졌을 때,\n[동작 횟수-맨 앞의 수]를 순서대로 적는다면 1회-2 / 2회-3 / 3회-1 \u0026hellip;으로 이후에는 앞의 과정의 반복이다.\n이런 규칙성을 통해 배열의 크기로 동작 횟수를 나눠서 나온 나머지로 간단하게 답을 찾을 수 있다.\n이 경우에는 배열의 크기는 3이므로 나머지는 1이다.\n따라서, 답은 1회에 나왔던 2가 된다.\n아래의 코드는 앞서 설명한 규칙을 적용한 풀이이다.\nT = int(input()) for tc in range(1, T+1): N, M = map(int, input().split()) array = list(map(int, input().split())) print(\u0026#34;#{} {}\u0026#34;.format(tc, array[len(array)//M])) 알고리즘을 정말 정말 정말 싫어하지만 이처럼 하나의 문제에서 여러 풀이과정이 나올 수 있다는 점은 흥미롭다.\n여러 시각으로 문제를 보는 감각을 길러 D4 이상의 알고리즘 문제까지 다 부숴 버리고 싶다.\n파이팅\n","date":"2021-04-29T00:00:00Z","image":"https://quipu1.github.io/p/5097.-%ED%9A%8C%EC%A0%84/algo_hue3db04eebe188a719e999114b3db8004_30311_120x120_fill_box_smart1_2.png","permalink":"https://quipu1.github.io/p/5097.-%ED%9A%8C%EC%A0%84/","title":"5097. 회전"}]